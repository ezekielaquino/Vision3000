{"version":3,"sources":["../../src/RequestImage.js","../../src/index.js","js/index.js"],"names":["RequestImage","image","Image","Promise","resolve","reject","src","onload","onerror","Vision3000","options","rootMargin","threshold","onIntersect","FPS","init","VISION3K","IntersectionObserver","intersect","entries","observe","scrollIntent","forEach","id","entry","target","observeId","inView","window","filter","item","isIntersecting","push","viewed","includes","index","element","observables","querySelector","onLoadStart","dataset","then","classList","decode","replaceWith","img","onLoad","catch","error","scrollProps","setScrollProps","timeout","setTimeout","scrollSpeed","Math","abs","scrollY","prevY","isHalted","loadImages","length","observer","initVision3000","nav","document","gutter","innerWidth","cols","floor","props","style","width","_getClassList","list","fragment","createDocumentFragment","navFragment","Array","cells","keys","map","n","elem","createElement","fig","add","appendChild","navItem","navLink","navLabel","navDot","innerHTML","setAttribute","append","body","navItems","querySelectorAll","Observer","remove","observable","log"],"mappings":"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","file":"js.14db82d0.map","sourceRoot":"../src","sourcesContent":["const RequestImage = src => {\n  const image = new Image();\n\n  return new Promise((resolve, reject) => {\n    image.src = src;\n    image.onload = resolve(image);\n    image.onerror = reject;\n  });\n}\n\n\nexport default RequestImage;","import RequestImage from './RequestImage';\n\n\n/**\n  VISION3000\n  2018\n  A proof of concept WIP\n  It's usable, but use it at your own risk!\n  Note: if you're planning to use this in Safari,\n  then you have to polyfill IntersectionObserver\n\n  yarn add intersection-observer\n  and just import 'intersection-observer' (2.5kb)\n  then you're good to go\n*/\nclass Vision3000 {\n  constructor(options = {}) {\n    this.options = {\n      rootMargin: options.rootMargin || '0px 0px',\n      threshold: options.threshold || [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n    };\n    this.onIntersect = options.onIntersect;\n    this.FPS = 2;\n    this.init();\n  }\n\n  init() {\n    window.VISION3K = {\n      observer: new IntersectionObserver(entries => { this.intersect(entries) }, this.options),\n      observe: this.observe,\n      onIntersect: this.onIntersect,\n      observables: [],\n      inView: [],\n      viewed: [],\n      errors: [],\n    };\n\n    this.scrollIntent();\n  }\n\n  intersect(entries) {\n    entries.forEach(entry => {\n      const id = entry.target.observeId;\n\n      window.VISION3K.inView = window.VISION3K.inView.filter(item => item !== id);\n\n      if (entry.isIntersecting) window.VISION3K.inView.push(id);\n    });\n\n    const onIntersect = window.VISION3K.onIntersect || this.onIntersect;\n    if (typeof onIntersect === 'function') onIntersect(window.VISION3K.inView, window.VISION3K.viewed);\n  }\n\n  loadImages() {\n    window.VISION3K.inView.forEach(index => {\n      if (!window.VISION3K.viewed.includes(index)) {\n        const element = window.VISION3K.observables[index - 1];\n        const image = element.querySelector('img');\n\n        window.VISION3K.viewed.push(index);\n\n        if (typeof element.onLoadStart === 'function') element.onLoadStart(element, image, window.VISION3K.viewed);\n\n        RequestImage(image.dataset.src)\n          .then(img => {\n            img.classList = image.classList;\n\n            img.decode().then(() => {\n              image.replaceWith(img);\n              if (typeof element.onLoad === 'function') element.onLoad(element, image, window.VISION3K.viewed);\n            });\n          })\n          .catch(e => {\n             console.error(`Failed to load image ${image.dataset.src}`);\n          });\n      }\n    });\n  }\n\n  scrollIntent() {\n   this.scrollProps = {\n      scrollSpeed: 0,\n      isHalted: true,\n      prevScrollSpeed: 0,\n      prevY: 0,\n    };\n\n    const setScrollProps = () => {\n      clearTimeout(this.timeout);\n\n      this.timeout = setTimeout(() => {\n        const scrollSpeed = Math.abs(window.scrollY - this.scrollProps.prevY);\n        const isHalted = scrollSpeed === 0;\n\n        this.scrollProps = {\n          scrollSpeed,\n          isHalted,\n          prevY: window.scrollY,\n          prevScrollSpeed: this.scrollProps.scrollSpeed,\n        };\n\n        if (isHalted) this.loadImages();\n\n        setScrollProps();\n      }, 1000 / this.FPS);\n    }\n\n    setScrollProps();\n  }\n\n  observe(element, options) {\n    window.VISION3K.observables.push(element);\n\n    element.observeId = window.VISION3K.observables.length;\n    element.onLoadStart = options.onLoadStart;\n    element.onLoad = options.onLoad;\n\n    window.VISION3K.observer.observe(element);\n  }\n}\n\nexport const initVision3000 = options => new Vision3000(options);\n\n\nexport default Vision3000;","import Vision3000 from '../../../src';\n\nconst nav = document.querySelector('.nav');\nconst gutter = window.innerWidth > 720 ? 60 : 30;\nconst cols = Math.floor((window.innerWidth - gutter) / 60);\nconst props = {\n  cells: cols * 3,\n  width: cols * 60,\n};\n\nnav.querySelector('.nav__wrap').style.width = `${props.width}px`;\n\nconst _getClassList = index => {\n  const list = ['observable'];\n\n  if (index > 2 && index < 7) list.push('observable--40');\n\n  return list;\n}\n\nconst fragment = document.createDocumentFragment();\nconst navFragment = document.createDocumentFragment();\n\nconst length = 21;\nconst observables = [...Array(props.cells).keys()].map((n, index) => {\n  const elem = document.createElement('div');\n  const fig = document.createElement('figure');\n  const img = new Image();\n\n  img.src = `src/images/sqip/${index + 1}.svg`;\n  img.dataset.src = `src/images/highres/${index + 1}.jpg`;\n  elem.classList.add(..._getClassList(index));\n  elem.id = `image-${index + 1}`;\n\n  fig.appendChild(img);\n  elem.appendChild(fig);\n  fragment.appendChild(elem);\n\n  // navigation\n  const navItem = document.createElement('li');\n  const navLink = document.createElement('a');\n  const navLabel = document.createElement('span');\n  const navDot = document.createElement('span');\n\n  navLabel.innerHTML = `IMG${index + 1}`;\n\n  navLabel.classList.add('nav__label');\n  navDot.classList.add('nav__dot');\n  navItem.classList.add('nav__item');\n\n  navLink.setAttribute('href', `#image-${index + 1}`);\n\n  navLink.append(navLabel, navDot);\n  navItem.appendChild(navLink);\n  navFragment.appendChild(navItem);\n\n  return elem;\n});\n\nnav.querySelector('ul').appendChild(navFragment);\ndocument.body.appendChild(fragment);\n\nconst navItems = [...document.querySelectorAll('.nav__item')];\n\nconst Observer = new Vision3000({\n  rootMargin: '0px 0px',\n  threshold: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n  onIntersect: (inView, viewed) => {\n    navItems.forEach((item, index) => {\n      if (inView.includes(index + 1)) {\n        item.classList.add('viewing');\n      } else {\n        item.classList.remove('viewing');\n      }\n    });\n  },\n});\n\nobservables.forEach((observable, index) => {\n  Observer.observe(observable, {\n    onLoadStart: (elem, image) => {\n      console.log(`Element ${index} is in vision with src ${image.dataset.src}`);\n      observable.classList.add('is-loading');\n    },\n    onLoad: (elem, image) => {\n      console.log(`Image Loaded! Source is ${image.dataset.src}.`);\n      observable.classList.remove('is-loading');\n      navItems[index].classList.add('viewed');\n    }\n  });\n});\n\n"]}